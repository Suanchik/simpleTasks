webpackHotUpdate("main",{

/***/ "./src/redux/penal.js":
/*!****************************!*\
  !*** ./src/redux/penal.js ***!
  \****************************/
/*! exports provided: addNewCardItem, addNewListItem, dalateAllItem, addNewName, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addNewCardItem", function() { return addNewCardItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addNewListItem", function() { return addNewListItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dalateAllItem", function() { return dalateAllItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addNewName", function() { return addNewName; });
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

const initial = {
  items: {
    0: {
      name: 'Задачи на месяц',
      item: [{
        name: "Английский"
      }, {
        name: "спорт"
      }, {
        name: "Программирование"
      }, {
        name: "медитация"
      }, {
        name: "Прэсс качат"
      }]
    },
    1: {
      name: 'Задачи на день',
      item: [{
        name: "Английский"
      }, {
        name: "спорт"
      }, {
        name: "Программирование"
      }, {
        name: "медитация"
      }, {
        name: "турник"
      }]
    }
  }
};

const penal = (state = initial, action) => {
  switch (action.type) {
    case 'ADD_CARD':
      debugger;
      return { ...state,
        items: { ...state.items,
          [action.el]: { ...state.items[action.el],
            item: [...state.items[action.el].item, {
              name: action.text
            }]
          }
        }
      };

    case 'ADD_NEW_LIST':
      return { ...state,
        items: { ...state.items,
          [action.newName]: action.obj
        }
      };

    case 'DELETE_ALL_CARD':
      {
        const newItems = { ...state.items
        };
        delete newItems[action.elementName];
        return { ...state,
          items: newItems
        };
      }

    case 'ADD_NEW_NAME':
      {
        const newItems = { ...state.items
        };
        newItems[action.el].name = action.newName;
        return { ...state,
          items: newItems
        };
      }

    default:
      return state;
  }
};

const addNewCardItem = (el, text) => {
  return {
    type: "ADD_CARD",
    el,
    text
  };
};
const addNewListItem = (obj, newName) => {
  return {
    type: "ADD_NEW_LIST",
    obj,
    newName
  };
};
const dalateAllItem = elementName => {
  return {
    type: "DELETE_ALL_CARD",
    elementName
  };
};
const addNewName = (element, newName) => {
  return {
    type: "ADD_NEW_NAME",
    element,
    newName
  };
};
/* harmony default export */ __webpack_exports__["default"] = (penal);

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ })

})
//# sourceMappingURL=main.7a6feaac1cea97efbda6.hot-update.js.map